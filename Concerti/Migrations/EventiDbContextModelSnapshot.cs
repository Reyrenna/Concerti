// <auto-generated />
using System;
using Concerti.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Concerti.Migrations
{
    [DbContext(typeof(EventiDbContext))]
    partial class EventiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Concerti.Models.Artisti", b =>
                {
                    b.Property<int>("IdArtista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArtista"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Genere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArtista");

                    b.ToTable("Artistis");
                });

            modelBuilder.Entity("Concerti.Models.Biglietto", b =>
                {
                    b.Property<int>("IdBiglietto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBiglietto"));

                    b.Property<DateTime>("DataAcquisto")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EventoIdEvento")
                        .HasColumnType("int");

                    b.Property<int>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdUser")
                        .HasColumnType("int");

                    b.HasKey("IdBiglietto");

                    b.HasIndex("EventoIdEvento");

                    b.HasIndex("UserIdUser");

                    b.ToTable("Bigliettos");
                });

            modelBuilder.Entity("Concerti.Models.Evento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<int?>("ArtistiIdArtista")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArtista")
                        .HasColumnType("int");

                    b.Property<string>("Luogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEvento");

                    b.HasIndex("ArtistiIdArtista");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Concerti.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Concerti.Models.Biglietto", b =>
                {
                    b.HasOne("Concerti.Models.Evento", null)
                        .WithMany("Bigliettos")
                        .HasForeignKey("EventoIdEvento");

                    b.HasOne("Concerti.Models.User", null)
                        .WithMany("Bigliettos")
                        .HasForeignKey("UserIdUser");
                });

            modelBuilder.Entity("Concerti.Models.Evento", b =>
                {
                    b.HasOne("Concerti.Models.Artisti", null)
                        .WithMany("eventos")
                        .HasForeignKey("ArtistiIdArtista");
                });

            modelBuilder.Entity("Concerti.Models.Artisti", b =>
                {
                    b.Navigation("eventos");
                });

            modelBuilder.Entity("Concerti.Models.Evento", b =>
                {
                    b.Navigation("Bigliettos");
                });

            modelBuilder.Entity("Concerti.Models.User", b =>
                {
                    b.Navigation("Bigliettos");
                });
#pragma warning restore 612, 618
        }
    }
}
